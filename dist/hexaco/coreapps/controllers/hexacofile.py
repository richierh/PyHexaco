"""Subclass of MyFrame1, which is generated by wxFormBuilder."""

import pathlib

import wx
# from coreapps.models.query import connect_db
from coreapps.views.control_text import ControlEntry
from coreapps.views.grafikmatplotlib import GrafikDimensi,GrafikEm, GrafikEx,\
        GrafikIA
# from coreapps.views.maingui import FrameGrafikTerpisah,LihatNilaiPeserta,DialogSimpan
from coreapps.views.maingui import FrameDepan
from coreapps.views.menubar_tentang import TentangAplikasi
from coreapps.views.DataPeserta import DataPesertaHexaco
from coreapps.controllers.ev_halaman import HalamanEventControl
from coreapps.controllers.ev_database import DatabaseEventControl
from coreapps.controllers.ev_filter_db import BukaFilter
from coreapps.views.huruf_besar import HurufBesar
from coreapps.controllers.ev_halaman import KamusControl
# from coreapps.views import grafikmatplotlib
from coreapps.views.grafikmatplotlib import *
from coreapps.views.dialog_simpan import TurunanDialogSimpan
from coreapps.controllers.hitung_data import HitungData
from coreapps.controllers.hexaco_calculation import DimensiHexaco



# Implementing MyFrame1
class Hexacofile(FrameDepan):
    

    def __init__(self, parent):
        super(Hexacofile, self).__init__(parent)
        self.huruf_besar = HurufBesar(self)
#               Properties Windows Utama
        self.SetTitle("Aplikasi Binakarir - Hexaco")
        self.m_button1.Disable()
        pathimage = pathlib.Path.cwd() / "resources/images/binadata.png"
        self.image1 = wx.Image(str(pathimage))
#               self.re_image1 = self.image1.Rescale(100,50)
        self.m_bitmap1.SetBitmap(wx.Bitmap(self.image1))

#               Design Grafik hasil Hexaco
#         self.versi_soal = 24
#         self.grafik_matplotlib = GrafikDimensi(self)
#         self.grafik_matplotlib.add_toolbar()
#         self.GrafikMatplotlib.SetSizer(self.grafik_matplotlib.sizer90)
#           
#         self.GrafikMatplotlib.Update()
#         self.GrafikMatplotlib.Refresh()
#         self.GrafikMatplotlib.Layout()

#               self.grafik_matplotlib1 = GrafikRincianDimensi1(self)
#               self.grafik_matplotlib1.draw()
#               self.GrafikMatplotlib1.SetSizer(self.grafik_matplotlib1.sizer98)

#               self.grafik_matplotlib2 = GrafikRincianDimensi2(self)
#               self.grafik_matplotlib2.draw()
#               self.GrafikMatplotlib2.SetSizer(self.grafik_matplotlib2.sizer99)
        
        self.text_entry = ControlEntry(self)
#               print(self.text_entry.get_input_biodata())
#               print(self.text_entry.get_input_versi24())

        self.Maximize(maximize=True)
        self.m_simplebook1.SetSelection(0)
                                                                                        
#               separate event into another file for simplicity
#               memindahkan event di file yang lain agar lebih sederhana
        self.control_halaman = HalamanEventControl(self)
        self.database_peserta = DataPesertaHexaco(self.m_listCtrl_tabel_database)
        self.control_database = DatabaseEventControl(self)
        self.listbox_control = KamusControl(self)
        
        

#               Base Frame get Updated
#               Frame Utama di Update
        self.Update()
        self.Refresh()
        self.Layout()
        

            
    
    def m_button4OnButtonClick24(self, event):
#         self.m_radioBtn1OnRadioButtonSoal24(self)
#         aplikasi akan diarahkan ke halaman sesuai dengan jenis soal/versi
#         print ("radio buttton 24")
        self.m_panel7.Show()
        self.m_panel8.Hide()
        self.m_button3.Enable()
        self.m_panel9.Hide()
        self.m_panel3.Update()
        self.m_panel3.Refresh()
        self.m_panel3.Layout()
        self.m_simplebook1.SetSelection(2)
#         stop

        self.tipe = 1
        self.versi_soal = 24
        
#         self.nilai = AmbilData(self)
#         print (self.nilai.get_data_from_input())
#         print ("aplikasi diarahkan kesini")
#         
#         self.grafik_matplotlib = GrafikDimensi(self)
#         self.GrafikMatplotlib.SetSizer(self.grafik_matplotlib.sizer90)
#         self.GrafikMatplotlib.Update()
#         self.GrafikMatplotlib.Refresh()
#         self.GrafikMatplotlib.Layout()

        print ("tes soal item 24")

    def m_button5OnButtonClick60(self, event):
#         self.m_radioBtn2OnRadioButtonSoal60(self)
#         aplikasi akan diarahkan ke halaman sesuai dengan jenis soal/versi
#         print ("radio button 60")
        self.m_panel7.Hide()
        self.m_panel8.Show()
        self.m_button3.Enable()
        self.m_panel9.Hide()
        self.m_panel3.Update()
        self.m_panel3.Refresh()
        self.m_panel3.Layout()
        self.m_simplebook1.SetSelection(2)
#         stop

        self.tipe = 2
        self.versi_soal = 60
        self.grafik_matplotlib = GrafikDimensi(self)
        self.GrafikMatplotlib.SetSizer(self.grafik_matplotlib.sizer90)
        self.GrafikMatplotlib.Update()
        self.GrafikMatplotlib.Refresh()
        self.GrafikMatplotlib.Layout()

        print ("tes soal item 60")
    
    def m_button6OnButtonClick100(self, event):
#         aplikasi akan diarahkan ke halaman sesuai dengan jenis soal/versi
#         print ("radio button 100")
        self.m_panel7.Hide()
        self.m_panel8.Hide()
        self.m_panel9.Show()
        self.m_button3.Enable()
        self.m_panel3.Update()
        self.m_panel3.Refresh()
        self.m_panel3.Layout()  
        self.m_simplebook1.SetSelection(2)
#         stop
    
#         self.m_radioBtn3OnRadioButtonSoal100(self)
        self.tipe = 3
        self.versi_soal = 100
        self.grafik_matplotlib = GrafikDimensi(self)
        self.GrafikMatplotlib.SetSizer(self.grafik_matplotlib.sizer90)
        self.GrafikMatplotlib.Update()
        self.GrafikMatplotlib.Refresh()
        self.GrafikMatplotlib.Layout()

        print ("tes soal item 100")
            
    def m_button7OnButtonClick(self, event):
            
        print ("hhjk")
            
    def m_menuItem1OnMenuSelection(self, event):
        self.Close()
        print ("Aplikasi ditutup")
            
    def m_button_cOnButtonClick(self, event):
        print ("tes over here 'c' grafik Conscientouseness " )
        
        self.hitung = HitungData(self)
        self.hasil_subdimensi,self.hasil_dimensi = self.hitung.hitung()
        print (self.hasil_subdimensi)
  
        self.grafik = GrafikC(self)
        self.grafik.Show()
        pass

    def m_button_aOnButtonClick(self, event):
        print ("tes over here 'a' grafik Agreeableness")
        
        self.hitung = HitungData(self)
        self.hasil_subdimensi,self.hasil_dimensi = self.hitung.hitung()
        print (self.hasil_subdimensi)
       
        self.grafik = GrafikA(self)
        
        self.grafik.Show()
        pass
    
    def m_button_emOnButtonClick(self, event):
        print ("tes over here 'em'")

        self.hitung = HitungData(self)
        self.hasil_subdimensi,self.hasil_dimensi = self.hitung.hitung()
        print (self.hasil_subdimensi)

        self.grafik = GrafikEm(self)
        self.grafik.Show()
        pass
    
    def m_button_hOnButtonClick(self, event):
        print ("tes over here 'h'")
        
        self.hitung = HitungData(self)
        self.hasil_subdimensi,self.hasil_dimensi = self.hitung.hitung()
        print (self.hasil_subdimensi)

        self.grafik = GrafikH(self)
        self.grafik.Show()
        pass

    def m_button_exOnButtonClick(self, event):
        print ("tes over here ' ex '")
        
        self.hitung = HitungData(self)
        self.hasil_subdimensi,self.hasil_dimensi = self.hitung.hitung()
        print (self.hasil_subdimensi)

        self.grafik = GrafikEx(self)
        self.grafik.Show()
        pass

    def m_button_oOnButtonClick(self, event):
        print ("print over here 'openness to experience grafik terpisah'")
         
        self.hitung = HitungData(self)
        self.hasil_subdimensi,self.hasil_dimensi = self.hitung.hitung()
        print (self.hasil_subdimensi)
            
        self.grafik = GrafikO(self)
        self.grafik.Show()
        pass
    
    def m_button_iaOnButtonClick(self, event):
        print ("print over here 'ia'")
        

        self.hitung = HitungData(self)
        self.hasil_subdimensi,self.hasil_dimensi = self.hitung.hitung()
        print (self.hasil_subdimensi)
              
            
        self.grafik = GrafikIA(self)
        self.grafik.Show()

        
        pass
    
    def m_menuItem2OnMenuSelection(self, event):
        self.buka = TentangAplikasi(self)
        self.buka.Show()
    
    
    def m_button_lihatOnButtonClick(self, event):
        print ("You have click 'Lihat'")
        pass

    def m_button_simpan_dataOnButtonClick(self, event):
        from coreapps.models.query import insert_input_peserta,\
        insert_data_peserta
        
        self.control_entry = ControlEntry(self)
        print (self.control_entry.get_input_biodata())
        if self.tipe == 1 :
                self.control_entry.panjang_data = len(self.control_entry.get_input_versi24())
                self.control_entry.get_input = self.control_entry.get_input_versi24()

        elif self.tipe == 2 :   
                self.control_entry.panjang_data= len(self.control_entry.get_input_versi60())
                self.control_entry.get_input = self.control_entry.get_input_versi60()

        elif self.tipe == 3 :
                self.control_entry.panjang_data = len(self.control_entry.get_input_versi100())
                self.control_entry.get_input = self.control_entry.get_input_versi100()

        else :
                print ("error di pilih tipe")
        
        self.no_tes = self.control_entry.get_input_biodata()[0]
        self.tanggal_tes = self.control_entry.get_input_biodata()[1]
        self.nama_kandidat = self.control_entry.get_input_biodata()[2]
        self.jenis_kelamin = self.control_entry.get_input_biodata()[3]
        self.tanggal_lahir = self.control_entry.get_input_biodata()[4]
        self.pendidikan_terakhir = self.control_entry.get_input_biodata()[5]
        self.jurusan_pendidikan = self.control_entry.get_input_biodata()[6]
        self.kota = self.control_entry.get_input_biodata()[7]
        self.perusahaan_instansi = self.control_entry.get_input_biodata()[8]
        self.posisi_jabatan = self.control_entry.get_input_biodata()[9]
        print (self.posisi_jabatan)
        
        values_id_peserta = [self.tipe, 
                            self.no_tes,
                            self.tanggal_tes,
                            self.nama_kandidat,
                            self.jenis_kelamin,
                            self.tanggal_lahir,
                            self.pendidikan_terakhir,
                            self.jurusan_pendidikan,
                            self.kota,
                            self.perusahaan_instansi,
                            self.posisi_jabatan]

#                 Instruksi untuk memasukkan ke dalam database (rincian data peserta)
#                 Id Peserta harus di generasi terlebih dahulu oleh instruksi di bawah ini
        self.input_data_peserta = insert_data_peserta(values_id_peserta)

        values = []
        print (self.control_entry.get_input)
        print (len(self.control_entry.get_input))
        for key in self.control_entry.get_input:
                values.append((key[0],key[1],self.tipe,1))
                print (key[0])
                

        print (values)
#                 Instruksi untuk memasukkan ke dalam database
        self.input_jawaban_peserta = insert_input_peserta(values)
        
#               wx.Message Box return OK
        
        self.dialog_simpan = TurunanDialogSimpan(self)
        self.dialog_simpan.Show()
        pass
    

    def m_button_buka_windows_filterOnButtonClick(self, event):
        self.buka_jendela_filter = BukaFilter(self)
        self.buka_jendela_filter.Show()
            
    def m_button_hapus_data_listctrlOnButtonClick(self, event):
        from coreapps.models.query import hapus_data_input_peserta,hapus_data_rincian_peserta
        
#               Memperoleh data id untuk dihapus berdasarkan idpeserta
#               print (self.m_listCtrl_tabel_database.GetFocusedItem())
#               print (self.m_listCtrl_tabel_database.GetItemText(0,1))

        self.values = [self.m_listCtrl_tabel_database.GetItemText(0,1)]
        self.hapus_datainput = hapus_data_input_peserta(self.values)
        self.hapus_datarincian = hapus_data_rincian_peserta(self.values)        
        self.m_listCtrl_tabel_database.DeleteItem(self.m_listCtrl_tabel_database.GetFocusedItem())              
        pass
    
    def m_radioBtn1OnRadioButtonSoal24(self, event):
        event.Skip()
    
    def m_radioBtn2OnRadioButtonSoal60(self, event):
        event.Skip()
            
    def m_radioBtn3OnRadioButtonSoal100(self, event):
        event.Skip()

